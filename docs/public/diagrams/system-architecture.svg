<svg viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
  <title>系统架构图</title>
  <desc>展示智课方舟的整体技术架构，包含前端、后端、数据库和AI服务层</desc>
  
  <defs>
    <!-- 渐变定义 -->
    <linearGradient id="frontendGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#667eea;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#764ba2;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="apiGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#f093fb;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#f5576c;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="serviceGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4facfe;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#00f2fe;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="dataGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#43e97b;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#38f9d7;stop-opacity:1" />
    </linearGradient>
    
    <linearGradient id="aiGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#fa709a;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#fee140;stop-opacity:1" />
    </linearGradient>
    
    <!-- 阴影滤镜 -->
    <filter id="shadow" x="-50%" y="-50%" width="200%" height="200%">
      <feDropShadow dx="0" dy="4" stdDeviation="8" flood-color="#000000" flood-opacity="0.15"/>
    </filter>
    
    <filter id="glow" x="-50%" y="-50%" width="200%" height="200%">
      <feGaussianBlur stdDeviation="3" result="coloredBlur"/>
      <feMerge> 
        <feMergeNode in="coloredBlur"/>
        <feMergeNode in="SourceGraphic"/>
      </feMerge>
    </filter>
  </defs>
  
  <style>
    /* 层动画 */
    .layer {
      animation: slideInUp 0.8s ease-out backwards;
    }
    .layer-1 { animation-delay: 0ms; }
    .layer-2 { animation-delay: 200ms; }
    .layer-3 { animation-delay: 400ms; }
    .layer-4 { animation-delay: 600ms; }
    .layer-5 { animation-delay: 800ms; }
    
    /* 连接线动画 */
    .connector {
      stroke-dasharray: 1000;
      stroke-dashoffset: 1000;
      animation: drawLine 1s ease-out forwards;
    }
    .connector-1 { animation-delay: 300ms; }
    .connector-2 { animation-delay: 500ms; }
    .connector-3 { animation-delay: 700ms; }
    .connector-4 { animation-delay: 900ms; }
    
    /* 数据流动画 */
    .data-flow {
      animation: dataFlow 2s ease-in-out infinite;
    }
    
    .layer-title {
      font-family: 'PingFang SC', -apple-system, BlinkMacSystemFont, sans-serif;
      font-size: 18px;
      font-weight: 700;
      text-anchor: middle;
      dominant-baseline: middle;
      fill: #ffffff;
    }
    
    .layer-subtitle {
      font-family: 'PingFang SC', -apple-system, BlinkMacSystemFont, sans-serif;
      font-size: 14px;
      font-weight: 500;
      text-anchor: middle;
      dominant-baseline: middle;
      fill: #ffffff;
      opacity: 0.9;
    }
    
    .tech-stack {
      font-family: 'PingFang SC', -apple-system, BlinkMacSystemFont, sans-serif;
      font-size: 12px;
      font-weight: 500;
      text-anchor: middle;
      dominant-baseline: middle;
      fill: #ffffff;
      opacity: 0.8;
    }
    
    @keyframes slideInUp {
      from { 
        opacity: 0; 
        transform: translateY(30px); 
      }
      to { 
        opacity: 1; 
        transform: translateY(0); 
      }
    }
    
    @keyframes drawLine {
      to { 
        stroke-dashoffset: 0; 
      }
    }
    
    @keyframes dataFlow {
      0%, 100% { 
        opacity: 0.6; 
        transform: scale(1); 
      }
      50% { 
        opacity: 1; 
        transform: scale(1.05); 
      }
    }
  </style>
  
  <!-- 背景 -->
  <rect width="800" height="600" fill="#f8fafc" />
  
  <!-- 网格背景 -->
  <defs>
    <pattern id="grid" width="40" height="40" patternUnits="userSpaceOnUse">
      <path d="M 40 0 L 0 0 0 40" fill="none" stroke="#e2e8f0" stroke-width="1" opacity="0.3"/>
    </pattern>
  </defs>
  <rect width="800" height="600" fill="url(#grid)" />
  
  <!-- 连接线 -->
  <path class="connector connector-1" d="M 400 120 L 400 160" stroke="#cbd5e1" stroke-width="3" fill="none" stroke-linecap="round" />
  <path class="connector connector-2" d="M 400 220 L 400 260" stroke="#cbd5e1" stroke-width="3" fill="none" stroke-linecap="round" />
  <path class="connector connector-3" d="M 400 320 L 400 360" stroke="#cbd5e1" stroke-width="3" fill="none" stroke-linecap="round" />
  <path class="connector connector-4" d="M 400 420 L 400 460" stroke="#cbd5e1" stroke-width="3" fill="none" stroke-linecap="round" />
  
  <!-- 数据流指示器 -->
  <circle class="data-flow" cx="400" cy="140" r="6" fill="#3b82f6" opacity="0.8" />
  <circle class="data-flow" cx="400" cy="240" r="6" fill="#3b82f6" opacity="0.8" />
  <circle class="data-flow" cx="400" cy="340" r="6" fill="#3b82f6" opacity="0.8" />
  <circle class="data-flow" cx="400" cy="440" r="6" fill="#3b82f6" opacity="0.8" />
  
  <!-- 层1: 前端层 -->
  <g class="layer layer-1">
    <rect x="200" y="50" width="400" height="80" rx="16" fill="url(#frontendGradient)" filter="url(#shadow)" />
    <text class="layer-title" x="400" y="80">前端层 (Frontend)</text>
    <text class="layer-subtitle" x="400" y="100">Vue 3 + Vite + TypeScript</text>
    <text class="tech-stack" x="400" y="115">Pinia状态管理 | 响应式设计 | PWA支持</text>
  </g>
  
  <!-- 层2: API层 -->
  <g class="layer layer-2">
    <rect x="200" y="150" width="400" height="80" rx="16" fill="url(#apiGradient)" filter="url(#shadow)" />
    <text class="layer-title" x="400" y="180">API层 (API Gateway)</text>
    <text class="layer-subtitle" x="400" y="200">FastAPI + Python 3.9+</text>
    <text class="tech-stack" x="400" y="215">RESTful API | 异步处理 | 自动文档生成</text>
  </g>
  
  <!-- 层3: 业务层 -->
  <g class="layer layer-3">
    <rect x="200" y="250" width="400" height="80" rx="16" fill="url(#serviceGradient)" filter="url(#shadow)" />
    <text class="layer-title" x="400" y="280">业务层 (Service Layer)</text>
    <text class="layer-subtitle" x="400" y="300">课程管理 | 题库管理 | 学习分析</text>
    <text class="tech-stack" x="400" y="315">微服务架构 | 事件驱动 | 缓存优化</text>
  </g>
  
  <!-- 层4: 数据层 -->
  <g class="layer layer-4">
    <rect x="200" y="350" width="400" height="80" rx="16" fill="url(#dataGradient)" filter="url(#shadow)" />
    <text class="layer-title" x="400" y="380">数据层 (Data Layer)</text>
    <text class="layer-subtitle" x="400" y="400">PostgreSQL + Redis + 文件存储</text>
    <text class="tech-stack" x="400" y="415">数据持久化 | 缓存加速 | 备份恢复</text>
  </g>
  
  <!-- 层5: AI服务层 -->
  <g class="layer layer-5">
    <rect x="200" y="450" width="400" height="80" rx="16" fill="url(#aiGradient)" filter="url(#shadow)" />
    <text class="layer-title" x="400" y="480">AI服务层 (AI Services)</text>
    <text class="layer-subtitle" x="400" y="500">OpenAI API + 文档解析 + 内容生成</text>
    <text class="tech-stack" x="400" y="515">智能分析 | 流式处理 | 成本优化</text>
  </g>
  
  <!-- 侧边技术栈 -->
  <g class="layer layer-2">
    <!-- 前端技术栈 -->
    <rect x="50" y="70" width="120" height="40" rx="8" fill="#ffffff" stroke="#e2e8f0" stroke-width="2" filter="url(#shadow)" />
    <text x="110" y="85" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#1e293b">Vue 3</text>
    <text x="110" y="100" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">Vite + TS</text>
    
    <!-- API技术栈 -->
    <rect x="50" y="170" width="120" height="40" rx="8" fill="#ffffff" stroke="#e2e8f0" stroke-width="2" filter="url(#shadow)" />
    <text x="110" y="185" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#1e293b">FastAPI</text>
    <text x="110" y="200" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">Python 3.9+</text>
    
    <!-- 数据库技术栈 -->
    <rect x="50" y="370" width="120" height="40" rx="8" fill="#ffffff" stroke="#e2e8f0" stroke-width="2" filter="url(#shadow)" />
    <text x="110" y="385" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#1e293b">PostgreSQL</text>
    <text x="110" y="400" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">Redis + 存储</text>
    
    <!-- AI技术栈 -->
    <rect x="50" y="470" width="120" height="40" rx="8" fill="#ffffff" stroke="#e2e8f0" stroke-width="2" filter="url(#shadow)" />
    <text x="110" y="485" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#1e293b">OpenAI</text>
    <text x="110" y="500" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">GPT-4 + 解析</text>
  </g>
  
  <!-- 右侧部署信息 -->
  <g class="layer layer-3">
    <rect x="630" y="70" width="140" height="200" rx="12" fill="#ffffff" stroke="#e2e8f0" stroke-width="2" filter="url(#shadow)" />
    <text x="700" y="95" font-family="PingFang SC" font-size="14" font-weight="700" text-anchor="middle" fill="#1e293b">部署架构</text>
    
    <text x="700" y="120" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#3b82f6">容器化部署</text>
    <text x="700" y="135" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">Docker + K8s</text>
    
    <text x="700" y="160" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#10b981">负载均衡</text>
    <text x="700" y="175" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">Nginx + CDN</text>
    
    <text x="700" y="200" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#f59e0b">监控告警</text>
    <text x="700" y="215" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">Prometheus + Grafana</text>
    
    <text x="700" y="240" font-family="PingFang SC" font-size="12" font-weight="600" text-anchor="middle" fill="#8b5cf6">安全防护</text>
    <text x="700" y="255" font-family="PingFang SC" font-size="10" text-anchor="middle" fill="#64748b">HTTPS + WAF</text>
  </g>
</svg>
